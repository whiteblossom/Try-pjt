{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\trypjt\\\\src\\\\component\\\\SearchPage.js\",\n  _s = $RefreshSig$();\n// SearchPage.js\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [searchedNews, setSearchedNews] = useState([]);\n  useEffect(() => {\n    // 가상의 검색된 뉴스 목록\n    const dummySearchedNews = Array.from({\n      length: 10\n    }, (_, index) => ({\n      id: index + 1,\n      title: `검색된 뉴스 ${index + 1}`,\n      content: `검색된 뉴스 내용 ${index + 1}`\n    }));\n    setSearchedNews(dummySearchedNews);\n  }, [searchKeyword]);\n  const handleSearch = () => {\n    // 검색 버튼 클릭 시 호출되는 함수\n    // 검색 결과를 업데이트하고, 필요한 경우 API 등을 사용하여 실제 검색 기능을 구현할 수 있습니다.\n    setSearchedNews( /* API 호출 등으로 검색된 결과 업데이트 */);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headline-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: searchKeyword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: searchedNews.map(news => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/detail/${news.id}`,\n              children: news.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, news.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"Cv7u8lfHw8fmhNnY/W7Sh2DSuFo=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","SearchPage","_s","searchKeyword","setSearchKeyword","searchedNews","setSearchedNews","dummySearchedNews","Array","from","length","_","index","id","title","content","handleSearch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","news","to","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/trypjt/src/component/SearchPage.js"],"sourcesContent":["// SearchPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SearchPage = () => {\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [searchedNews, setSearchedNews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 가상의 검색된 뉴스 목록\r\n    const dummySearchedNews = Array.from({ length: 10 }, (_, index) => ({\r\n      id: index + 1,\r\n      title: `검색된 뉴스 ${index + 1}`,\r\n      content: `검색된 뉴스 내용 ${index + 1}`,\r\n    }));\r\n    setSearchedNews(dummySearchedNews);\r\n  }, [searchKeyword]);\r\n\r\n  const handleSearch = () => {\r\n    // 검색 버튼 클릭 시 호출되는 함수\r\n    // 검색 결과를 업데이트하고, 필요한 경우 API 등을 사용하여 실제 검색 기능을 구현할 수 있습니다.\r\n    setSearchedNews(/* API 호출 등으로 검색된 결과 업데이트 */);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"main-container\">\r\n        <div className=\"headline-container\">\r\n          <h1>{searchKeyword}</h1>\r\n          <ul>\r\n            {searchedNews.map((news) => (\r\n              <li key={news.id}>\r\n                {/* Link를 사용하여 해당 기사의 상세 페이지로 이동 */}\r\n                <Link to={`/detail/${news.id}`}>{news.title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,iBAAiB,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,MAAM;MAClEC,EAAE,EAAED,KAAK,GAAG,CAAC;MACbE,KAAK,EAAG,UAASF,KAAK,GAAG,CAAE,EAAC;MAC5BG,OAAO,EAAG,aAAYH,KAAK,GAAG,CAAE;IAClC,CAAC,CAAC,CAAC;IACHN,eAAe,CAACC,iBAAiB,CAAC;EACpC,CAAC,EAAE,CAACJ,aAAa,CAAC,CAAC;EAEnB,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACAV,eAAe,CAA6B,CAA5B,6BAA6B;EAC/C,CAAC;EAED,oBACEN,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7BjB,OAAA;QAAKkB,SAAS,EAAC,oBAAoB;QAAAD,QAAA,gBACjCjB,OAAA;UAAAiB,QAAA,EAAKd;QAAa;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBtB,OAAA;UAAAiB,QAAA,EACGZ,YAAY,CAACkB,GAAG,CAAEC,IAAI,iBACrBxB,OAAA;YAAAiB,QAAA,eAEEjB,OAAA,CAACF,IAAI;cAAC2B,EAAE,EAAG,WAAUD,IAAI,CAACX,EAAG,EAAE;cAAAI,QAAA,EAAEO,IAAI,CAACV;YAAK;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC,GAF5CE,IAAI,CAACX,EAAE;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGZ,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CArCID,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}